@startuml component

actor developer as "Developer"
participant github as "GitHub"
participant ci as "Continuous Integration"
database registry as "Docker Hub"
participant hookd
database db as "Postgres"
collections deployd
participant kubernetes as "NAIS"

==Build and release==
developer -> github: git push
github -> ci: Start build
ci -> registry: Push image

==/api/v1/deploy==
ci -> hookd: Start deployment
note right: Authenticate with team API key
hookd -> db: Create deployment
hookd -> github: Create deployment
note right: if enabled

loop until timeout or success
	ci -> hookd: Poll for final deployment status
	hookd --> ci
end

==Deploy phase==
hookd -> deployd: Commission deployment
hookd -> db: Append deployment status
note right: queued
hookd -> github: Sync deployment status
note right: if enabled
deployd -> kubernetes: Deploy
kubernetes --> deployd
deployd -> hookd: Report status
hookd -> db: Append deployment status
note right: in_progress
hookd -> github: Sync deployment status
note right: if enabled

loop until timeout or success
	deployd -> kubernetes: Check rollout status
	kubernetes --> deployd
end

deployd -> hookd: Report status
hookd -> db: Append deployment status
note right: success
hookd -> github: Sync deployment status
note right: if enabled

==Errors==
hookd -> db:  Append deployment status
note left: Application failed to start
note right: failure
hookd -> db:  Append deployment status
note left: Error in deployment request
note right: error
hookd -> db:  Append deployment status
note left: Internal error in NAIS deploy
note right: error

@enduml
